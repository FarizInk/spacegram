// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "sqlite"
    url      = env("DATABASE_URL")
}

model User {
    id           String        @id @default(cuid())
    email        String        @unique
    name         String
    password     String
    avatar       String?
    isSuperUser  Boolean       @default(false)
    token        String?
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @default(now()) @updatedAt
    deletedAt    DateTime?
    clients      Client[]
    applications Application[]
}

model Ticket {
    id            String       @id @default(cuid())
    application   Application? @relation(fields: [applicationId], references: [id])
    applicationId String?
    permission    String?
    // executeAt: datetime start action
    executeAt     DateTime?
    // executeAt: datetime end action, if execute not null === success, u can get info execution time by compare executeAt and successAt
    successAt     DateTime?
    createdAt     DateTime     @default(now())
    updatedAt     DateTime     @default(now()) @updatedAt
}

model Client {
    id           String        @id @default(cuid())
    user         User          @relation(fields: [userId], references: [id])
    userId       String
    name         String
    session      String        @unique
    createdAt    DateTime      @default(now())
    updatedAt    DateTime      @default(now()) @updatedAt
    applications Application[]
}

model Application {
    id        String   @id @default(cuid())
    user      User     @relation(fields: [userId], references: [id])
    userId    String
    client    Client   @relation(fields: [clientId], references: [id])
    clientId  String
    name      String
    publicKey String?  @unique
    secretKey String?  @unique
    // telegram groupId
    groupId   String   @default("")
    createdAt DateTime @default(now())
    updatedAt DateTime @default(now()) @updatedAt
    tickets   Ticket[]
    files     File[]
}

model File {
    id               String      @id @default(cuid())
    application      Application @relation(fields: [applicationId], references: [id])
    applicationId    String
    extensionType    String?
    extension        String?
    size             BigInt?
    permission       String      @default("public")
    // identifier is unique by groupId, can change (to short the link by file name), but id not
    identifier       String?
    // is chached to tmp folder?
    isCached         Boolean     @default(false)
    // telegram groupId
    groupId          String      @default("")
    // telegram chatId
    chatId           String?
    // telegram uploaded status
    isUploaded       Boolean?
    // globalIdentifier is unique, purpose to short the link by file name
    globalIdentifier String?     @unique
    createdAt        DateTime    @default(now())
    updatedAt        DateTime    @default(now()) @updatedAt
}
